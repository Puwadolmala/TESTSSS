{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// src/app/product-form/product-form.component.ts\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ApiService } from '../services/api.service';\nlet ProductFormComponent = class ProductFormComponent {\n  constructor(fb, api) {\n    this.fb = fb;\n    this.api = api;\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      category: ['', Validators.required],\n      isAvailable: [false]\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.api.createProduct(this.form.value).subscribe(response => {\n        console.log('Product created successfully', response);\n        this.form.reset();\n      }, error => {\n        console.error('Error creating product', error);\n      });\n    }\n  }\n};\nProductFormComponent = __decorate([Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.scss'] // เปลี่ยนให้เป็น .scss\n}), __metadata(\"design:paramtypes\", [FormBuilder, ApiService])], ProductFormComponent);\nexport { ProductFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}